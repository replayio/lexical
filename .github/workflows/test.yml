name: E2E Test
on:
  schedule:
    - cron: '0 0 * * *'
  push:
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  record:
    runs-on: ubuntu-latest
    env:
      CI: true
      E2E_EDITOR_MODE: plain-text
      E2E_EVENTS_MODE: modern-events
    outputs:
      recordDuration: ${{steps.end.outputs.recordDuration}}
      uploadDuration: ${{steps.end.outputs.uploadDuration}}

    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js 16.15.1
        uses: actions/setup-node@v3
        with:
          node-version: 16.15.1
      - name: install required packages
        run: |
          sudo apt-get update
          sudo apt-get install xvfb
      - run: npm i -g npm@8
      - uses: actions/cache@v3
        id: cache
        with:
          path: |
            node_modules
            packages/playwright-core/node_modules
            ~/.cache/ms-playwright
          key: ${{ runner.os }}-CACHE_VERSION_SECRET-${{ hashFiles('package-lock.json') }}
      - name: Install dependencies
        # if: steps.cache.outputs.cache-hit != 'true'
        run: npm ci
      - name: Download browsers
        run: npx playwright install && npx @replayio/playwright install
      - name: Set test start
        if: always()
        id: recordStart
        run: echo "time=`date +%s`" >> $GITHUB_OUTPUT
      - run: npm run test-e2e-ci-replay
        env:
          RECORD_REPLAY_TEST_METRICS: 1
          RECORD_REPLAY_WEBHOOK_URL: ${{ secrets.RECORD_REPLAY_WEBHOOK_URL }}
      - name: Set upload start
        if: always()
        id: uploadStart
        run: echo "time=`date +%s`" >> $GITHUB_OUTPUT
      - name: Upload replays
        if: ${{ always() }}
        uses: replayio/action-upload@v0.4.3
        with:
          public: true
          api-key: rwk_2MDN0nWD1k3EQR1XejqxtcyHNXrjYlc0lKo4Tz3RRhf
      - name: Set duration in output
        id: end
        if: always()
        run: |
          echo "recordDuration=$((${{ steps.uploadStart.outputs.time }} - ${{ steps.recordStart.outputs.time }}))" >> $GITHUB_OUTPUT
          echo "uploadDuration=$((`date +%s` - ${{ steps.uploadStart.outputs.time }}))" >> $GITHUB_OUTPUT
  no-record:
    runs-on: ubuntu-latest
    env:
      CI: true
      E2E_EDITOR_MODE: plain-text
      E2E_EVENTS_MODE: modern-events
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js 16.15.1
        uses: actions/setup-node@v3
        with:
          node-version: 16.15.1
      - name: install required packages
        run: |
          sudo apt-get update
          sudo apt-get install xvfb
      - run: npm i -g npm@8
      - uses: actions/cache@v3
        id: cache
        with:
          path: |
            node_modules
            packages/playwright-core/node_modules
            ~/.cache/ms-playwright
          key: ${{ runner.os }}-CACHE_VERSION_SECRET-${{ hashFiles('package-lock.json') }}
      - name: Install dependencies
        # if: steps.cache.outputs.cache-hit != 'true'
        run: npm ci
      - name: Download browsers
        run: npx playwright install && npx @replayio/playwright install
      - run: npm run test-e2e-ci-replay
        env:
          RECORD_REPLAY_NO_RECORD: 1
          RECORD_REPLAY_TEST_METRICS: 1
          RECORD_REPLAY_WEBHOOK_URL: ${{ secrets.RECORD_REPLAY_WEBHOOK_URL }}
  original:
    runs-on: ubuntu-latest
    env:
      CI: true
      E2E_EDITOR_MODE: plain-text
      E2E_EVENTS_MODE: modern-events
    outputs:
      duration: ${{steps.end.outputs.duration}}
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js 16.15.1
        uses: actions/setup-node@v3
        with:
          node-version: 16.15.1
      - name: install required packages
        run: |
          sudo apt-get update
          sudo apt-get install xvfb
      - run: npm i -g npm@8
      - uses: actions/cache@v3
        id: cache
        with:
          path: |
            node_modules
            packages/playwright-core/node_modules
            ~/.cache/ms-playwright
          key: ${{ runner.os }}-CACHE_VERSION_SECRET-${{ hashFiles('package-lock.json') }}
      - name: Install dependencies
        # if: steps.cache.outputs.cache-hit != 'true'
        run: npm ci
      - name: Download browsers
        run: npx playwright install
      - name: Set test start
        if: always()
        id: start
        run: echo "time=`date +%s`" >> $GITHUB_OUTPUT
      - run: npm run test-e2e-ci-chromium
      - name: Set duration in output
        if: always()
        id: end
        run: echo "duration=$((`date +%s` - ${{ steps.start.outputs.time }}))" >> $GITHUB_OUTPUT

  upload-benchmarks:
    name: Upload benchmarks
    runs-on: ubuntu-latest
    needs: [record, original]
    if: always()
    steps:
      - run: |
          echo "Original Duration: ${{ needs.original.outputs.duration }}"
          echo "Record Duration: ${{ needs.record.outputs.recordDuration }}"
          echo "Upload Duration: ${{ needs.record.outputs.uploadDuration }}"
      - name: Fetch API Data ðŸ“¦
        uses: JamesIves/fetch-api-data-action@v2
        with:
          endpoint: 'https://telemetry.replay.io'
          configuration: '{ "method": "POST", "body": {"event": "Webhook", "source": "metrics", "name": "action-finished", "project": "lexical", "originalDuration": "${{ needs.original.outputs.duration }}", "recordDuration": "${{ needs.record.outputs.recordDuration }}", "uploadDuration": "${{ needs.record.outputs.uploadDuration }}"} }'
